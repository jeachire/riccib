[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jesus Achire. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ramos JAyP (2024). riccib: Objective Bayesian analysis Ricci distribution. R package version 0.1.0.","code":"@Manual{,   title = {riccib: Objective Bayesian analysis for the Ricci distribution},   author = {Jesus Achire y Pedro Ramos},   year = {2024},   note = {R package version 0.1.0}, }"},{"path":"/reference/riccibo.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter estimation of the Ricci distribution using Jeffrey's prior. — riccibo","title":"Parameter estimation of the Ricci distribution using Jeffrey's prior. — riccibo","text":"function estimates parameters Ricci distribution sample using Jeffrey's prior.","code":""},{"path":"/reference/riccibo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter estimation of the Ricci distribution using Jeffrey's prior. — riccibo","text":"","code":"riccibo(x, R, burn, jump, b = 1)"},{"path":"/reference/riccibo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter estimation of the Ricci distribution using Jeffrey's prior. — riccibo","text":"x vector values want fit Ricci model. R Number samples chain (including burned samples). burn positive integer specifying number warmup samples. also specifies number samples used stepsize adaptation, warmup draws used inference. number warmup larger R. jump Thinning rate. Must positive integer.","code":""},{"path":"/reference/riccibo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter estimation of the Ricci distribution using Jeffrey's prior. — riccibo","text":"list containing following estimates: acep Acceptance rate metropolis hastings algorithm. eta Point estimate eta parameter. alpha Point estimate parameter alpha. CIL_eta Lower limit credibility interval (95%) eta parameter. CIS_eta Upper limit credibility interval (95%) eta parameter. CIL_alpha Lower limit credibility interval (95%) alpha parameter. CIS_alpha Upper limit credibility interval (95%) alpha parameter. Geweke.statistics Z-Statistic Geweke's convergence diagnostic.","code":""},{"path":"/reference/riccibo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parameter estimation of the Ricci distribution using Jeffrey's prior. — riccibo","text":"section, outline Monte Carlo Markov chain algorithm sampling joint posterior distribution.  generate samples \\(\\eta\\) \\(\\alpha\\) marginal posterior distribution, Metropolis-Hastings (MH) algorithm required since marginal distributions closed-form expressions. Therefore, order obtain samples marginal distributions, can use conditional distribution given \\( p_1(\\eta|\\alpha,\\boldsymbol{x})\\propto \\sqrt{(\\rho+1)\\Psi(\\rho)-    \\rho}\\prod_{=1}^{n}I_0\\left( \\frac{\\eta x_i}{\\alpha^2}      \\right) \\exp\\left( -\\sum_{=1}^{n}\\frac{x_i^2 + \\eta^2}        {2\\alpha^2} \\right)\\) \\( p_2(\\alpha|\\eta,\\boldsymbol{x})\\propto\\frac{\\sqrt{(\\rho+1) \\Psi(\\rho)-\\rho}}{\\alpha^{2n+2}}\\prod_{=1}^{n}I_0\\left( \\frac {\\eta x_i}{\\alpha^2} \\right) \\exp\\left( -\\sum_{=1}^{n}\\frac {x_i^2 + \\eta^2}{2\\alpha^2} \\right)\\) study, adopt Gamma distribution \\(q(\\alpha^{(*)}|\\alpha^{(j)},k)\\) y \\(q(\\eta^{(*)}|\\eta^{(j)},d)\\)  proposal distribution sample values parameters  \\(\\alpha\\) \\(\\eta\\), respectively, \\(d\\) \\(k\\)  hyperparameters influence convergence rate  algorithm. important note alternative proposal  distributions can utilized place Gamma model,  model generates values positive real  line. subsequent steps detail execution MH  algorithm:  Compute initial values \\(\\eta^{(1)}\\) \\(\\alpha^{(1)}\\) moment estimators initialize counter \\(j=1\\); Generate random number \\(\\eta^{(*)}\\) \\(Gamma(\\eta^{(j)}, d)\\) distribution; Calculate acceptance probability, defined : \\( \\Delta\\left(\\eta^{(j)},\\eta^{(*)}\\right)=\\min\\left(1, \\frac {p_1\\left(\\eta^{(*)}|\\alpha^{(j)},\\boldsymbol{x}\\right)} {p_1\\left(\\eta^{(j)}|\\alpha^{(j)},\\boldsymbol{x}\\right)} \\frac{q\\left(\\eta^{(j)}|\\eta^{(*)},d\\right)}{q \\left(\\eta^{(*)}|\\eta^{(j)},d\\right)}\\right)\\) Draw random sample independent uniform distribution \\(u\\) interval (0,1); \\(\\Delta\\left(\\eta^{(j)},\\eta^{(*)}\\right)\\geq u(0,1)\\), accept value \\(\\eta^{(*)}\\) set \\(\\eta^{(j+1)}=\\eta^{(*)}\\). \\(\\Delta\\left(\\eta^{(j)},\\eta^{(*)}\\right)< u(0,1)\\), reject value set \\(\\eta^{(j+1)}=\\eta^{(j)}\\); Generate random number \\(\\alpha^{(*)}\\) \\(Gamma(\\alpha^{(j)}, k)\\) distribution; Calculate acceptance probability, defined : \\( \\Delta\\left(\\alpha^{(j)},\\alpha^{(*)}\\right)=\\min \\left(1, \\frac{p_2\\left(\\alpha^{(*)}|\\eta^{(j+1)}, \\boldsymbol{x}\\right)}{p_2\\left(\\alpha^{(j)}|\\eta^{(j+1)}, \\boldsymbol{x}\\right)} \\frac{q\\left(\\alpha^{(j)}| \\alpha^{(*)},k\\right)}{q\\left(\\alpha^{(*)}|\\alpha^{(j)},k \\right)}\\right)\\) Draw random sample independent uniform distribution \\(u\\) interval (0,1); \\(\\Delta\\left(\\alpha^{(j)},\\alpha^{(*)}\\right)\\geq u(0,1)\\), accept value \\(\\alpha^{(*)}\\) set \\(\\alpha^{(j+1)}=\\alpha^{(*)}\\). \\(\\Delta\\left(\\alpha^{(j)},\\alpha^{(*)}\\right)< u(0,1)\\), reject value set \\(\\alpha^{(j+1)}=\\alpha^{(j)}\\); Increment counter (j) (j+1) repeat steps 2-7 chains converge. implementation MCMC methodology detailed previously facilitated generation 5,500 samples posterior distributions. excluded initial 500 samples, considering burn-phase, applied thinning process interval every 5 samples. procedure resulted two separate chains, containing \\(1000\\) samples, utilized derive posterior statistical summaries. Initial values simulation determined using moment estimators, known analytical solutions. assess convergence Markov chains produced, Geweke diagnostic employed. diagnostic employs method compares mean values first \\(10\\%\\) last \\(50\\%\\) chain, positing equality means indicates sampling stationary (posterior) distribution. Consequently, Geweke statistic, hypothesis, expected conform standard normal distribution approaches infinity. computation Z-score assumes independence two segments chain long term. Convergence chains inferred respective Geweke statistics fell within critical range -1.96 1.96.","code":""},{"path":"/reference/riccibo.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Parameter estimation of the Ricci distribution using Jeffrey's prior. — riccibo","text":"Rice, S. O. (1944). Mathematical analysis random noise. Bell System Technical Journal, 23(3), 282-332. Jeffreys, H. (1946). invariant form prior probability estimation problems. Proceedings Royal Society London. Series . Mathematical Physical Sciences, 186(1007), 453-461.","code":""},{"path":[]},{"path":"/reference/riccibo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameter estimation of the Ricci distribution using Jeffrey's prior. — riccibo","text":"","code":"if (FALSE) { # Do not run this R code without first installing and loading the `riccib` # package from the repository https://github.com/jeachire/riccib, as well # as the `coda`, `MCMCpack`, and `VGAM` packages from CRAN.  if (!requireNamespace(\"remotes\", quietly = TRUE)) {   install.packages(\"remotes\") } remotes::install_github(\"jeachire/riccib\") library(riccib)  if (!requireNamespace(\"coda\", quietly = TRUE)) {   install.packages(\"coda\") } library(coda)  if (!requireNamespace(\"MCMCpack\", quietly = TRUE)) {   install.packages(\"MCMCpack\") } library(MCMCpack)  if (!requireNamespace(\"VGAM\", quietly = TRUE)) {   install.packages(\"VGAM\") } library(VGAM)  # Use the riccibo function from the riccib package  peta <- 6       # eta parameter palpha <- 2       # alpha parameter n <-30      # sample size x<-rrice(n, palpha,peta)  # Generates a sample of the Ricci distribution riccibo(x,R=5500,burn=500,jump=5) }"}]
